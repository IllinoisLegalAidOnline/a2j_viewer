<?php
/**
 * Created by PhpStorm.
 * User: gdaniels
 * Date: 1/8/19
 * Time: 8:37 AM
 */

/**
 * Implements hook_menu().
 */
function a2j_viewer_menu() {
  $items['admin/a2j-viewer'] = array(
    'title' => 'Hosted A2J 6 configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('a2j_viewer_admin_form'),
    'access callback' => 'a2j_viewer_admin_access',
    'file' => 'a2j_viewer.ui.inc',
    'file path' => drupal_get_path('module', 'a2j_viewer'),
  );
  return $items;
}

function a2j_viewer_admin_access() {
  return TRUE;
}

/**
 * Implements hook_form_alter().
 */
function a2j_viewer_form_node_form_alter(&$form, &$form_state, $form_id) {
 dpm($form_id);
  if (empty(variable_get('a2j_viewer_content_type'))) {
    variable_set('a2j_viewer_content_type','article');
  }
  $form_name = variable_get('a2j_viewer_content_type') .'_node_form';
  dpm($form_name);
  if ($form_name == $form_id) {
 //   $form['#after_build'][] = 'a2j_viewer_after_build';
   // $form['#after_build'][] = 'a2j_viewer_after_build';
    $form['#submit'] += array('a2j_viewer_submit_handler');
  }

}

function a2j_viewer_submit_handler($form, &$form_state) {
 //dpm($form_state['values']);
  dpm('hello world');
 // dpm($form_state);
  $fieldname = variable_get('a2j_viewer_field_name');
  if (!empty($fieldname)) {
    dpm($form_state['values'][$fieldname]);
    if (isset($form_state['values'][$fieldname][LANGUAGE_NONE][0]['fid'])) {
      $fid = $form_state['values'][$fieldname][LANGUAGE_NONE][0]['fid'];
      dpm('my fid is ' .$form_state['values'][$fieldname][LANGUAGE_NONE][0]['fid']);
      a2j_viewer_unpack_file($fid);
    }
  }
}

function a2j_viewer_unpack_file($fid) {
  $fileInfo = file_load($fid);
  $directory_location = variable_get('a2j_viewer_file_directory');
  $directory = 'public://' .$directory_location .'/fid' .$fid;
  $file = $fileInfo->uri;
  $archiver = archiver_get_archiver($file);
  if (!$archiver) {
    throw new Exception(t('Cannot extract %file, not a valid archive.', array ('%file' => $file)));
  }

// Remove the directory if it exists, otherwise it might contain a mixture of
// old files mixed with the new files (e.g. in cases where files were removed
// from a later release).
  $files = $archiver->listContents();
  $project = strtok($files[0], '/\\');

  $extract_location = $directory . '/' . $project;
  if (file_exists($extract_location)) {
    file_unmanaged_delete_recursive($extract_location);
  }

  $archiver->extract($directory);
}